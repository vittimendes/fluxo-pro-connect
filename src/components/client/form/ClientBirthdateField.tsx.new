// filepath: c:\Users\User\Meu Drive\lovable\apps\fluxo-pro-connect\src\components\client\form\ClientBirthdateField.tsx
import { useState } from 'react';
import { Calendar as CalendarIcon } from 'lucide-react';
import { format } from 'date-fns';
import { ptBR } from 'date-fns/locale';
import { FormField, FormItem, FormLabel, FormControl, FormDescription, FormMessage } from '@/components/ui/form';
import { Button } from '@/components/ui/button';
import { Popover, PopoverContent, PopoverTrigger } from '@/components/ui/popover';
import { Calendar } from '@/components/ui/calendar';
import { cn } from '@/lib/utils';
import { UseFormReturn } from 'react-hook-form';
import { z } from 'zod';

// Define proper type for the form
interface ClientBirthdateFieldProps {
  form: UseFormReturn<any>;
}

export const ClientBirthdateField = ({
  form
}: ClientBirthdateFieldProps) => {
  const [open, setOpen] = useState(false);
  
  // Calculate minimum date (100 years ago) and maximum date (today)
  const today = new Date();
  const minDate = new Date();
  minDate.setFullYear(today.getFullYear() - 100);

  return (
    <FormField
      control={form.control}
      name="birthdate"
      render={({ field }) => (
        <FormItem className="flex flex-col">
          <FormLabel>Data de Nascimento</FormLabel>
          <div className="flex gap-2">
            <Popover open={open} onOpenChange={setOpen}>
              <PopoverTrigger asChild>
                <FormControl>
                  <Button
                    variant={"outline"}
                    className={cn(
                      "w-full pl-3 text-left font-normal flex justify-between items-center",
                      !field.value && "text-muted-foreground"
                    )}
                  >
                    {field.value ? (
                      format(field.value, "dd 'de' MMMM 'de' yyyy", { locale: ptBR })
                    ) : (
                      <span>Selecione uma data</span>
                    )}
                    <CalendarIcon className="h-4 w-4 opacity-50 ml-auto" />
                  </Button>
                </FormControl>
              </PopoverTrigger>
              <PopoverContent className="w-auto p-0 z-50" align="start">
                <Calendar
                  mode="single"
                  captionLayout="dropdown-buttons"
                  selected={field.value}
                  onSelect={(date) => {
                    field.onChange(date);
                    setOpen(false);
                  }}
                  disabled={(date) => date > today || date < minDate}
                  defaultMonth={field.value || today}
                  initialFocus
                  fromYear={today.getFullYear() - 100}
                  toYear={today.getFullYear()}
                  className="p-3"
                  locale={ptBR}
                />
              </PopoverContent>
            </Popover>
          </div>
          <FormDescription>
            Selecione a data de nascimento do cliente
          </FormDescription>
          <FormMessage />
        </FormItem>
      )}
    />
  );
};
